run 'pgrep spring | xargs kill -9'

# GEMFILE
########################################
run 'rm Gemfile'
file 'Gemfile', <<-RUBY
source 'https://rubygems.org'
ruby '#{RUBY_VERSION}'

#{"gem 'bootsnap', require: false" if Rails.version >= "5.2"}
gem 'devise'
gem 'jbuilder', '~> 2.0'
gem 'pg', '~> 0.21'
gem 'puma'
gem 'rails', '#{Rails.version}'
gem 'redis'

gem 'autoprefixer-rails'
gem 'font-awesome-sass', '~> 5.6.1'
gem 'sassc-rails'
gem 'simple_form'
gem 'uglifier'
gem 'webpacker'
# Obfuscates form HTML so that bots submit spam to invisible fields
gem 'invisible_captcha'
# I18n Rails and Devise support
gem 'devise-i18n'
gem 'rails-i18n'
gem 'cloudinary', '~> 1.9.1'

group :development do
  gem 'web-console', '>= 3.3.0'
  # Mimicks emails in the dev environment
  gem 'letter_opener'
  # Warns of N+1 queries
  gem 'bullet'
  # Appends the database schema to models
  gem 'annotate'
  gem 'rubocop'
  gem 'rubocop-performance'
  # Creates a PDF with the visual database layout
  gem 'rails-erd'
  # Security vulnerability scanner
  gem 'brakeman'
  # Git hook manager
  gem 'overcommit'
  # Better error page for Rails apps
  gem 'better_errors'
  gem 'binding_of_caller'
end

group :development, :test do
  gem 'pry-byebug'
  gem 'pry-rails'
  gem 'listen', '~> 3.0.5'
  gem 'spring'
  gem 'spring-watcher-listen', '~> 2.0.0'
  gem 'dotenv-rails'
  # Required for testing purposes
  gem 'capybara'
  gem 'selenium-webdriver'
  gem 'launchy'
  # Keeps Selenium drivers up to date automatically
  gem 'webdrivers', '~> 3.0'
end

group :test do
  # Provides a GUI for test coverage
  gem 'simplecov', require: false
end
RUBY

@bootstrap = yes?('Do you want to use Boostrap 4 as a CSS framework?')

# Ruby version
########################################
file '.ruby-version', RUBY_VERSION

# Procfile
########################################
file 'Procfile', <<-YAML
web: bundle exec puma -C config/puma.rb
YAML

# Assets
########################################
run 'rm -rf app/assets/stylesheets'
run 'rm -rf vendor'
run 'mkdir app/assets/stylesheets'
run 'curl -L https://github.com/main-verte/rails-template/archive/master.zip > stylesheets.zip'
run 'unzip stylesheets.zip -d app/assets && rm stylesheets.zip && mv app/assets/rails-template-master/assets/* app/assets/stylesheets'
run 'rm -r app/assets/rails-template-master'

run 'rm app/assets/javascripts/application.js'
file 'app/assets/javascripts/application.js', <<-JS
//= require rails-ujs
//= require_tree .
JS

# Dev environment
########################################
gsub_file('config/environments/development.rb', /config\.assets\.debug.*/, 'config.assets.debug = false')

# Layout
########################################
run 'rm app/views/layouts/application.html.erb'
file 'app/views/layouts/application.html.erb', <<-HTML
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Main Verte Consulting</title>
    <%= csrf_meta_tags %>
    <%= action_cable_meta_tag %>
    <%= stylesheet_link_tag 'application', media: 'all' %>
    <%#= stylesheet_pack_tag 'application', media: 'all' %> <!-- Uncomment if you import CSS in app/javascript/packs/application.js -->
  </head>
  <body>
    <%= render 'shared/navbar' %>
    <%= render 'shared/flashes' %>
    <%= yield %>
    <%= javascript_include_tag 'application' %>
    <%= javascript_pack_tag 'application' %>
  </body>
</html>
HTML

file 'app/views/shared/_flashes.html.erb', <<-HTML
<% if notice %>
  <div class="alert alert-info alert-dismissible fade show m-1" role="alert">
    <%= notice %>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
<% end %>
<% if alert %>
  <div class="alert alert-warning alert-dismissible fade show m-1" role="alert">
    <%= alert %>
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
<% end %>
HTML

run 'https://raw.githubusercontent.com/main-verte/rails-template/master/views/shared/_navbar.html.erb > app/views/shared/_navbar.html.erb'

# README
########################################
markdown_file_content = <<-MARKDOWN
Rails app template generated by the team at Main Verte Consulting.
MARKDOWN
file 'README.md', markdown_file_content, force: true

# Generators
########################################
generators = <<-RUBY
config.generators do |generate|
      generate.assets false
      generate.helper false
      generate.test_framework  :test_unit, fixture: false
    end
RUBY

environment generators

########################################
# AFTER BUNDLE
########################################
after_bundle do
  # Generators: db + simple form + pages controller
  ########################################
  rails_command 'db:drop db:create db:migrate'
  generate('simple_form:install', '--bootstrap')
  generate(:controller, 'pages', 'home', '--skip-routes', '--no-test-framework')

  # Routes
  ########################################
  route "root to: 'pages#home'"

  # Git ignore
  ########################################
  run 'rm .gitignore'
  file '.gitignore', <<-TXT
.bundle
log/*.log
tmp/**/*
tmp/*
!log/.keep
!tmp/.keep
*.swp
.DS_Store
public/assets
public/packs
public/packs-test
node_modules
yarn-error.log
.byebug_history
.env*
TXT

  # Devise install + user
  ########################################
  generate('devise:install')
  generate('devise', 'User')

  # App controller
  ########################################
  run 'rm app/controllers/application_controller.rb'
  file 'app/controllers/application_controller.rb', <<-RUBY
class ApplicationController < ActionController::Base
  protect_from_forgery with: :exception
  before_action :authenticate_user!
end
RUBY

  # migrate + devise views
  ########################################
  rails_command 'db:migrate'
  generate('devise:views')

  # Pages Controller
  ########################################
  run 'rm app/controllers/pages_controller.rb'
  file 'app/controllers/pages_controller.rb',
  <<-RUBY
  class PagesController < ApplicationController
    skip_before_action :authenticate_user!, only: [:home]

    def home
    end
  end
  RUBY

  # Environments
  ########################################
  environment 'config.action_mailer.default_url_options = { host: "http://localhost:3000" }', env: 'development'
  environment 'config.action_mailer.default_url_options = { host: "http://TODO_PUT_YOUR_DOMAIN_HERE" }', env: 'production'

  # Webpacker / Yarn
  ########################################
  inject_into_file 'config/webpack/environment.js', before: 'module.exports' do
  <<-JS
  const webpack = require('webpack')

  // Preventing Babel from transpiling NodeModules packages
  environment.loaders.delete('nodeModules');
  JS
  end

  # Custom gem configurations
  ########################################

  # Bullet
  ########################################
  inject_into_file 'config/environments/development.rb', before: /^end/ do
    <<-RUBY

  config.after_initialize do
    Bullet.enable = true
    Bullet.alert = true
  end
    RUBY
  end

  # Testing
  ########################################

  # test/test_helper.rb
  inject_into_file 'test/test_helper.rb', after: 'fixtures :all' do
    <<-RUBY

  # Devise test helpers
  include Warden::Test::Helpers
  Warden.test_mode!
    RUBY
  end

  # test/test_helper.rb
  gsub_file('test/test_helper.rb', '# Add more helper methods to be used by all tests here...', '')
  gsub_file('test/test_helper.rb', /^\s*$/, '')

  # test/test_helper.rb
  inject_into_file 'test/test_helper.rb', after: /^end/ do
    <<-RUBY

    Capybara.register_driver :headless_chrome do |app|
      capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(
        'chromeOptions' => { args: %w(headless disable-gpu) + [ 'window-size=1280,800' ] })
      Capybara::Selenium::Driver.new app, browser: :chrome, desired_capabilities: capabilities
    end
    Capybara.save_path = Rails.root.join('tmp/capybara')
    Capybara.javascript_driver = :headless_chrome
    RUBY
  end

  # test/application_system_test_case.rb
  gsub_file('test/application_system_test_case.rb', 'driven_by :selenium, using: :chrome, screen_size: [1400, 1400]', 'driven_by :headless_chrome')

  # SimpleCov
  ########################################
  inject_into_file 'test/test_helper.rb', before: "ENV['RAILS_ENV'] ||= 'test'" do
    <<-RUBY
    require 'simplecov'
    SimpleCov.start

    RUBY
  end

  # Bootstrap 4
  ########################################

  def setup_bootstrap
    inject_into_file 'app/assets/stylesheets/application.scss', '@import "config/bootstrap_variables";', after: '@import "config/colors";'
    inject_into_file 'app/assets/stylesheets/application.scss', '@import "bootstrap/scss/bootstrap";', after: '// External libraries'

    run 'rm app/javascript/packs/application.js'
    run 'yarn add popper.js jquery bootstrap'
    file 'app/javascript/packs/application.js',
    <<-JS
    import "bootstrap";
      JS

    inject_into_file 'config/webpack/environment.js', after: "environment.loaders.delete('nodeModules');" do
    <<-JS

    // Bootstrap 4 has a dependency over jQuery & Popper.js:
    environment.plugins.prepend('Provide',
      new webpack.ProvidePlugin({
        $: 'jquery',
        jQuery: 'jquery',
        Popper: ['popper.js', 'default']
      })
    )
    JS
    end
  end

  def remove_bootstrap
    run 'rm app/assets/stylesheets/config/_bootstrap_variables.scss'
  end

  @bootstrap ? setup_bootstrap : remove_bootstrap

  # Overcommit
  ########################################
  run 'overcommit --install'
  append_to_file '.overcommit.yml' do
    <<-RUBY

    PreCommit:
    Annotate:
      enabled: true
      on_warn: fail
      problem_on_unmodified_line: report
      command: ['bundle', 'exec', 'annotate']
    ERD:
      enabled: true
      on_warn: fail
      problem_on_unmodified_line: report
      command: ['bundle', 'exec', 'erd']
    RuboCop:
      enabled: true
      on_warn: fail
      problem_on_unmodified_line: report
      command: ['bundle', 'exec', 'rubocop']

    PrePush:
      Brakeman:
        enabled: true
        on_warn: fail
        problem_on_unmodified_line: report
        command: ['bundle', 'exec', 'brakeman']
    RUBY
  end
  run 'overcommit --sign'

  # Dotenv
  ########################################
  run 'touch .env'

  # Rubocop
  ########################################
  run 'curl -L https://raw.githubusercontent.com/lewagon/rails-templates/master/.rubocop.yml > .rubocop.yml'

  # Git
  ########################################
  git :init
  git add: '.'
  git commit: "-m 'Initial commit with the Main Verte Consulting template'"
end
